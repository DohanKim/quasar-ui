/*! tailwindcss v2.2.17 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */
 
:-moz-focusring {
	outline: auto;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
	--tw-border-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-border-opacity));
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
	--tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
.pointer-events-none {
	pointer-events: none;
}
.pointer-events-auto {
	pointer-events: auto;
}
.static {
	position: static;
}
.fixed {
	position: fixed;
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.inset-0 {
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
}
.right-2 {
	right: 0.5rem;
}
.top-2 {
	top: 0.5rem;
}
.right-0\.5 {
	right: 0.125rem;
}
.right-0 {
	right: 0px;
}
.z-50 {
	z-index: 50;
}
.z-20 {
	z-index: 20;
}
.m-4 {
	margin: 1rem;
}
.mb-0\.5 {
	margin-bottom: 0.125rem;
}
.mb-0 {
	margin-bottom: 0px;
}
.mt-2 {
	margin-top: 0.5rem;
}
.mr-1 {
	margin-right: 0.25rem;
}
.ml-2 {
	margin-left: 0.5rem;
}
.mt-0\.5 {
	margin-top: 0.125rem;
}
.mt-0 {
	margin-top: 0px;
}
.ml-1 {
	margin-left: 0.25rem;
}
.mt-1 {
	margin-top: 0.25rem;
}
.mr-2 {
	margin-right: 0.5rem;
}
.block {
	display: block;
}
.flex {
	display: flex;
}
.h-14 {
	height: 3.5rem;
}
.h-4 {
	height: 1rem;
}
.h-full {
	height: 100%;
}
.h-7 {
	height: 1.75rem;
}
.h-5 {
	height: 1.25rem;
}
.w-4 {
	width: 1rem;
}
.w-full {
	width: 100%;
}
.w-7 {
	width: 1.75rem;
}
.w-0 {
	width: 0px;
}
.w-5 {
	width: 1.25rem;
}
.w-48 {
	width: 12rem;
}
.max-w-sm {
	max-width: 24rem;
}
.flex-1 {
	flex: 1 1 0%;
}
.flex-shrink-0 {
	flex-shrink: 0;
}
.cursor-pointer {
	cursor: pointer;
}
.flex-row {
	flex-direction: row;
}
.flex-col {
	flex-direction: column;
}
.items-end {
	align-items: flex-end;
}
.items-center {
	align-items: center;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.divide-x > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.divide-th-bkg-3 > :not([hidden]) ~ :not([hidden]) {
	border-color: var(--bkg-3);
}
.overflow-hidden {
	overflow: hidden;
}
.whitespace-nowrap {
	white-space: nowrap;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-none {
	border-radius: 0px;
}
.rounded-md {
	border-radius: 0.375rem;
}
.border {
	border-width: 1px;
}
.border-b {
	border-bottom-width: 1px;
}
.border-l {
	border-left-width: 1px;
}
.border-th-bkg-2 {
	border-color: var(--bkg-2);
}
.border-th-fgd-4 {
	border-color: var(--fgd-4);
}
.bg-blue-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}
.bg-th-bkg-1 {
	background-color: var(--bkg-1);
}
.bg-th-bkg-3 {
	background-color: var(--bkg-3);
}
.bg-th-bkg-2 {
	background-color: var(--bkg-2);
}
.p-4 {
	padding: 1rem;
}
.p-1 {
	padding: 0.25rem;
}
.p-2 {
	padding: 0.5rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}
.py-6 {
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.pl-2 {
	padding-left: 0.5rem;
}
.pb-0\.5 {
	padding-bottom: 0.125rem;
}
.pb-0 {
	padding-bottom: 0px;
}
.pr-2 {
	padding-right: 0.5rem;
}
.text-left {
	text-align: left;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.text-xxs {
	font-size: .65rem;
}
.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.font-bold {
	font-weight: 700;
}
.font-normal {
	font-weight: 400;
}
.leading-3 {
	line-height: .75rem;
}
.tracking-wider {
	letter-spacing: 0.05em;
}
.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-th-primary {
	color: var(--primary);
}
.text-th-fgd-4 {
	color: var(--fgd-4);
}
.text-th-fgd-3 {
	color: var(--fgd-3);
}
.text-th-fgd-1 {
	color: var(--fgd-1);
}
.text-th-green {
	color: var(--green);
}
.text-th-red {
	color: var(--red);
}
.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.ring-1 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-black {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(0, 0, 0, var(--tw-ring-opacity));
}
.ring-opacity-5 {
	--tw-ring-opacity: 0.05;
}
.filter {
	filter: var(--tw-filter);
}

/* Theme */

:root {
  --primary: #FF9C24;
  --primary-dark: #F58700;
  --red: #CC2929;
  --red-dark: #AA2222;
  --green: #5EBF4D;
  --green-dark: #4BA53B;
  --orange: #FF9C24;
  --bkg-1: #f7f7f7;
  --bkg-2: #FFFFFF;
  --bkg-3: #F0F0F0;
  --bkg-4: #E6E6E6;
  --fgd-1: #061f23;
  --fgd-2: #0C3F45;
  --fgd-3: #446065;
  --fgd-4: #B0B0B0;
}

[data-theme='Dark'] {
  --primary: #F2C94C;
  --primary-dark: #E4AF11;
  --red: #CC2929;
  --red-dark: #AA2222;
  --green: #5EBF4D;
  --green-dark: #4BA53B;
  --orange: #FF9C24;
  --bkg-1: #101012;
  --bkg-2: #1B1B1F;
  --bkg-3: #27272B;
  --bkg-4: #38383D;
  --fgd-1: #FFFFFF;
  --fgd-2: #F7F7F7;
  --fgd-3: #E7E7E7;
  --fgd-4: #878787;
}

[data-theme='Mango'] {
  --primary: #F2C94C;
  --primary-dark: #E4AF11;
  --red: #E54033;
  --red-dark: #C7251A;
  --green: #AFD803;
  --green-dark: #91B503;
  --orange: #FF9C24;
  --bkg-1: #141026;
  --bkg-2: #1D1832;
  --bkg-3: #2A2440;
  --bkg-4: #37324D;
  --fgd-1: #F0EDFF;
  --fgd-2: #FCFCFF;
  --fgd-3: #B9B5CE;
  --fgd-4: #706C81;
}

/* Base */

body {
	font-family: Lato, sans-serif;
	font-size: 0.875rem;
	line-height: 1.25rem;
	letter-spacing: 0.05em;
}

p {
	margin-bottom: 0.625rem;
	color: var(--fgd-3);
}

a {
	color: var(--primary);
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
	transition-duration: 300ms;
}

a:hover {
	color: var(--primary-dark);
}

button {
  transition: all 0.3s ease;
  border-radius: 0.375rem;
  font-weight: 600;
  letter-spacing: 0.05em;
}

.default-transition {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
	transition-duration: 300ms;
}

.tiny-text {
  font-size: 0.65rem;
  line-height: 1.5;

  @media screen and (max-width: 767px) {
    font-size: 14px;
  }
}

/* Chart */

.TVChartContainer {
  height: 100%;
  width: 100%;
}

.tradingview-chart {
  display: contents;
}

/* Grid */

.react-grid-item.react-grid-placeholder {
  background: var(--bkg-3);
  opacity: 90%;
  border-radius: 8px;
  transition-duration: 100ms;
  z-index: 2;
  -webkit-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.react-resizable-handle {
  background-image: none;
  z-index: 100;
}

.react-grid-item > .react-resizable-handle {
  width: 24px;
  height: 24px;
}

.react-grid-item > .react-resizable-handle::after {
  content: '';
  position: absolute;
  right: 8px;
  bottom: 0;
  width: 8px;
  height: 8px;
  border-right: 3px solid var(--primary);
  border-bottom: 3px solid var(--primary);
  border-radius: 1px;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type='number'] {
  -moz-appearance: textfield;
}

/* Scrollbars */

.thin-scroll::-webkit-scrollbar {
  width: 4px;
  height: 8px;
  background-color: var(--bkg-2);
}

.thin-scroll::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: var(--bkg-3);
}

.thin-scroll::-webkit-scrollbar-track {
  background-color: inherit;
}

.thin-scroll::-webkit-scrollbar-corner {
  background-color: var(--bkg-3);
}

/* Responsive table */
/* inspired by: https://css-tricks.com/responsive-data-tables/ */

.responsiveTable {
  width: 100%;
}

.responsiveTable td .tdBefore {
  display: none;
}

@media screen and (max-width: 767px) {
  .responsiveTable table,
  .responsiveTable thead,
  .responsiveTable tbody,
  .responsiveTable th,
  .responsiveTable td,
  .responsiveTable tr {
    display: block;
  }

  .responsiveTable thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
    border-bottom: 2px solid #333;
  }

  .responsiveTable tbody tr {
		padding-left: 1rem;
		padding-right: 1rem;
	}

  .responsiveTable td.pivoted {
    /* Behave like a "row" */
  }

  .responsiveTable td.pivoted {
		padding-bottom: 0.25rem;
	}

  .responsiveTable td.pivoted {
    position: relative;
    padding-left: calc(50% + 10px) !important;
    text-align: left !important;
    white-space: pre-wrap;
    overflow-wrap: break-word;
  }

  .responsiveTable td.pivoted:last-child {
    /* Behave like a "row" */
  }

  .responsiveTable td.pivoted:last-child {
		padding-bottom: 1rem;
	}

  .responsiveTable td.pivoted:last-child {
    /* Behave like a "row" */
  }

  .responsiveTable td.pivoted:last-child {
		border-bottom-width: 0px;
	}

  .responsiveTable td .tdBefore {
    /* Now like a table header */
  }

  .responsiveTable td .tdBefore {
		font-weight: 400;
	}

  .responsiveTable td .tdBefore {
		color: var(--fgd-3);
	}

  .responsiveTable td .tdBefore {
    position: absolute;
    display: block;

    /* Top/left values mimic padding */
    left: 1rem;
    width: calc(50% - 20px);
    white-space: pre-wrap;
    overflow-wrap: break-word;
    text-align: left !important;
  }
}

/* phone input */

.react-tel-input .form-control:hover + div {
  border-right: 1px solid var(--primary) !important;
}

.react-tel-input .form-control:focus + div {
  border-right: 1px solid var(--primary) !important;
}

.react-tel-input .selected-flag:hover {
  background-color: transparent !important;
}

.react-tel-input .flag-dropdown .open {
  background-color: transparent !important;
}

.react-tel-input .flag-dropdown:active {
  background-color: transparent !important;
}

.react-tel-input .country-list .country:hover {
  background-color: var(--bkg-3) !important;
}

.react-tel-input .country-list .highlight {
  background-color: var(--bkg-3) !important;
}

.react-tel-input .country-list {
  margin: 8px 0 10px -6px !important;
}

.react-tel-input .selected-flag:hover,
.react-tel-input .selected-flag:focus,
.react-tel-input .selected-flag.open {
  background-color: transparent !important;
}

/* orderbook flash */

@keyframes highlight {
  from {
    background-color: var(--primary);
  }
  to {
    background-color: transparent;
  }
}

.flash {
  animation: highlight 0.5s ease 0s 1 alternate;
}

.react-swipeable-view-container > div[aria-hidden='false'] {
  height: 100%;
}

.react-swipeable-view-container > div[aria-hidden='true'] {
  height: 0;
}

.hover\:cursor-pointer:hover {
	cursor: pointer;
}

.hover\:bg-blue-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(29, 78, 216, var(--tw-bg-opacity));
}

.hover\:bg-th-bkg-4:hover {
	background-color: var(--bkg-4);
}

.hover\:bg-th-bkg-2:hover {
	background-color: var(--bkg-2);
}

.hover\:text-th-fgd-1:hover {
	color: var(--fgd-1);
}

.hover\:text-th-primary:hover {
	color: var(--primary);
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.disabled\:cursor-wait:disabled {
	cursor: wait;
}

.disabled\:text-th-fgd-4:disabled {
	color: var(--fgd-4);
}

@media (min-width: 640px) {

	.sm\:p-6 {
		padding: 1.5rem;
	}
}

@media (min-width: 768px) {

	.md\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}

	.md\:pr-0 {
		padding-right: 0px;
	}
}

@media (min-width: 1024px) {

	.lg\:px-10 {
		padding-left: 2.5rem;
		padding-right: 2.5rem;
	}
}
